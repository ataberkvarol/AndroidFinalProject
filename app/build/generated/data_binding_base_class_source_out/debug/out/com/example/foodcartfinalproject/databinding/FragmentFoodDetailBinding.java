// Generated by data binding compiler. Do not edit!
package com.example.foodcartfinalproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.example.foodcartfinalproject.R;
import com.example.foodcartfinalproject.data.entity.Foods;
import com.example.foodcartfinalproject.ui.fragment.FoodsDetailFragment;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentFoodDetailBinding extends ViewDataBinding {
  @NonNull
  public final ImageView addToCartDetail;

  @NonNull
  public final Button buttonDecreaseQuantity;

  @NonNull
  public final Button buttonIncreaseQuantity;

  @NonNull
  public final FloatingActionButton fabDetail;

  @NonNull
  public final ImageView foodImage;

  @NonNull
  public final TextView foodNameText;

  @NonNull
  public final TextView foodPriceText;

  @NonNull
  public final TextView quantityText;

  @NonNull
  public final Toolbar toolbarDetailPage;

  @Bindable
  protected String mToolbarDetailPageData;

  @Bindable
  protected FoodsDetailFragment mDetailPageFragment;

  @Bindable
  protected Foods mFoodVariable;

  protected FragmentFoodDetailBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ImageView addToCartDetail, Button buttonDecreaseQuantity, Button buttonIncreaseQuantity,
      FloatingActionButton fabDetail, ImageView foodImage, TextView foodNameText,
      TextView foodPriceText, TextView quantityText, Toolbar toolbarDetailPage) {
    super(_bindingComponent, _root, _localFieldCount);
    this.addToCartDetail = addToCartDetail;
    this.buttonDecreaseQuantity = buttonDecreaseQuantity;
    this.buttonIncreaseQuantity = buttonIncreaseQuantity;
    this.fabDetail = fabDetail;
    this.foodImage = foodImage;
    this.foodNameText = foodNameText;
    this.foodPriceText = foodPriceText;
    this.quantityText = quantityText;
    this.toolbarDetailPage = toolbarDetailPage;
  }

  public abstract void setToolbarDetailPageData(@Nullable String toolbarDetailPageData);

  @Nullable
  public String getToolbarDetailPageData() {
    return mToolbarDetailPageData;
  }

  public abstract void setDetailPageFragment(@Nullable FoodsDetailFragment detailPageFragment);

  @Nullable
  public FoodsDetailFragment getDetailPageFragment() {
    return mDetailPageFragment;
  }

  public abstract void setFoodVariable(@Nullable Foods foodVariable);

  @Nullable
  public Foods getFoodVariable() {
    return mFoodVariable;
  }

  @NonNull
  public static FragmentFoodDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_food_detail, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentFoodDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentFoodDetailBinding>inflateInternal(inflater, R.layout.fragment_food_detail, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentFoodDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_food_detail, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentFoodDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentFoodDetailBinding>inflateInternal(inflater, R.layout.fragment_food_detail, null, false, component);
  }

  public static FragmentFoodDetailBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentFoodDetailBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentFoodDetailBinding)bind(component, view, R.layout.fragment_food_detail);
  }
}
